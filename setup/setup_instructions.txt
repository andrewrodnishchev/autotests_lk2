╔══════════════════════════════════════════════════════════════════════════════╗
║                        ИНСТРУКЦИЯ ПО ЗАПУСКУ ТЕСТОВ                          ║
╚══════════════════════════════════════════════════════════════════════════════╝

▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
1. ПРЕДВАРИТЕЛЬНЫЕ ТРЕБОВАНИЯ
▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

  • Установите зависимости:
    ┌─────────────────────────────────────────────────────────────────────────┐
    │ $ pip install -r requirements.txt                                       │
    └─────────────────────────────────────────────────────────────────────────┘

  • Убедитесь, что:
    ✓ Playwright browsers установлены:
      ┌───────────────────────────────────────────────────────────────────────┐
      │ $ playwright install                                                  │
      └───────────────────────────────────────────────────────────────────────┘
    ✓ Переменные окружения заданы в config.py

════════════════════════════════════════════════════════════════════════════════
2. ПРЕДЗАГРУЗКА СЕТАПА В СТЕНД
════════════════════════════════════════════════════════════════════════════════

  Перед первым запуском выполните:
  ┌───────────────────────────────────────────────────────────────────────────┐
  │ $ pytest setup/setup_config.py --stand=corp                               │
  └───────────────────────────────────────────────────────────────────────────┘

════════════════════════════════════════════════════════════════════════════════
3. ЗАПУСК ТЕСТОВ
════════════════════════════════════════════════════════════════════════════════

◈ Базовый запуск:
  ┌───────────────────────────────────────────────────────────────────────────┐
  │ $ pytest                           # Все тесты (stand=corp по умолчанию)  │
  │ $ pytest tests/test_example.py     # Конкретный тестовый файл             │
  │ $ pytest --headless                # Без графического интерфейса          │
  └───────────────────────────────────────────────────────────────────────────┘

◈ Дополнительные опции:
  ➤ Выбор стенда:
    ┌─────────────────────────────────────────────────────────────────────────┐
    │ --stand=linux | --stand=pub | --stand=win | --stand=setup               │
    └─────────────────────────────────────────────────────────────────────────┘

  ➤ Smoke-тесты:
    ┌─────────────────────────────────────────────────────────────────────────┐
    │ $ pytest -m smoke                                                       │
    └─────────────────────────────────────────────────────────────────────────┘

  ➤ Параллельный запуск (4 потока):
    ┌─────────────────────────────────────────────────────────────────────────┐
    │ $ pytest -n 4                                                           │
    └─────────────────────────────────────────────────────────────────────────┘

  ➤ Генерация отчета:
    ┌─────────────────────────────────────────────────────────────────────────┐
    │ $ pytest --html=report.html                                             │
    └─────────────────────────────────────────────────────────────────────────┘

════════════════════════════════════════════════════════════════════════════════
4. СТРУКТУРА ПРОЕКТА
════════════════════════════════════════════════════════════════════════════════

lk_assistant/
├── 📁 locators/     # Локаторы элементов
├── 📁 pages/        # Page Object модели
├── 📁 tests/        # Тест-кейсы
├── 🛠️ config.py     # Конфигурация стендов
├── 🛠️ conftest.py   # Фикстуры Pytest
└── 🛠️ pytest.ini    # Настройки Pytest

════════════════════════════════════════════════════════════════════════════════
5. КЛЮЧЕВЫЕ ПЕРЕМЕННЫЕ (config.py)
════════════════════════════════════════════════════════════════════════════════

  • LOGIN:           rodnischev@safib.ru
  • ADMIN_LOGIN:     test@safib.ru
  • DEFAULT_TIMEOUT: 10000 ms
  • SELECTED_STAND:  corp | linux | win

════════════════════════════════════════════════════════════════════════════════
6. РАБОТА С GIT
════════════════════════════════════════════════════════════════════════════════

  Стандартный workflow:
  ┌───────────────────────────────────────────────────────────────────────────┐
  │ $ git add .                                                               │
  │ $ git commit -m "Update: add new tests"                                   │
  │ $ git push                                                                │
  └───────────────────────────────────────────────────────────────────────────┘

════════════════════════════════════════════════════════════════════════════════
7. РЕШЕНИЕ ПРОБЛЕМ
════════════════════════════════════════════════════════════════════════════════

  Для дебага используйте:
  ┌───────────────────────────────────────────────────────────────────────────┐
  │ $ pytest --headed --slowmo 100                                            │
  └───────────────────────────────────────────────────────────────────────────┘

╔══════════════════════════════════════════════════════════════════════════════╗
║                               СОСТАВ СЕТАПА                                  ║
╚══════════════════════════════════════════════════════════════════════════════╝

1. Организации:
   ✓ Создать "тест андрей" + ведение журнала действий
   ✓ Создать сервисную организацию "сервисная"

2. Учетные записи:
   • rodnischev@safib.ru
   • andrey@mailforspam.com
   • ast1@mailforspam.com

3. Устройства:
   ✓ Добавленные устройства:
     - 141 233 475
     - 027 478 388
   ✓ Создать группу устройств

4. Коллекции:
   ◈ "По информации об устройстве":
     - Настройка правил добавления
   ◈ "По данным домена":
     - Настройка правил добавления
   ◈ "По инвентаризации":
     - Настройка правил добавления

5. Политики:
   ✓ Доступа: несколько с разными правилами
   ✓ Инвентаризации: добавить политику

6. Прочее:
   ✓ Сотрудники: добавить созданные учетные записи
   ✓ Отделы: создать тестовый отдел
   ✓ Лицензии: создать несколько видов и экземпляров